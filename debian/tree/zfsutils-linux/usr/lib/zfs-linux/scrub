#!/bin/sh -eu

# directly exit successfully when zfs module is not loaded
if modprobe -n -q --first-time zfs; then
	exit 0
fi

# [auto] / enable / disable
PROPERTY_NAME="org.debian:periodical-scrub"

get_property () {
	# Detect the ${PROPERTY_NAME} property from a given zpool
	# Note, we are abusing user-defined property on zpool root dataset
	# as "zpool user-defined property".
	pool=$1
	if ! zfs list -H -o name "${pool}" 1>/dev/null 2>/dev/null; then
		return 1  # failed to find the root dataset
	fi
	if ! zfs get -H -o value "${PROPERTY_NAME}" "${pool}" 1>/dev/null 2>/dev/null; then
		return 1  # no such property
	else
		# has such property
		zfs get -H -o value "${PROPERTY_NAME}" "${pool}"
	fi
}

scrub_if_not_scrub_in_progress () {
	pool=$1
	if ! zpool status "${pool}" | grep -q "scrub in progress"; then
		# Ignore errors and continue with scrubbing other pools.
		zpool scrub "${pool}" || true
	fi
}

# Scrub all healthy pools that are not already scrubbing.
zpool list -H -o health,name 2>&1 | \
	awk '$1 ~ /^ONLINE/ { print $2; }' | \
while read pool
do
	# read user-defined config
	ret=$(get_property "${pool}")
	if [ $? -ne 0 ] || [ "disable" = "${ret}" ]; then
		continue
	elif [ "-" = "${ret}" ] || [ "auto" = "${ret}" ] || [ "enable" = "${ret}" ]; then
		scrub_if_not_scrub_in_progress "${pool}"
	else
		cat > /dev/stderr <<EOF
/usr/lib/zfs-linux/scrub: [WARNING] illegal value "${ret}" for property "${PROPERTY_NAME}" of ZFS dataset "${pool}".
/usr/lib/zfs-linux/scrub: Acceptable choices for this property are: auto, enable, disable. The default is auto.
EOF
		continue
	fi
done
